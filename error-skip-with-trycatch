# skipping errors in a loop

rm(list=ls())

# a loop for calculating roots of a series of numbers

numbers<-c(4,9,16)

for(i in numbers){
  print(sqrt(i))
}

# but what happens if we put a negative number?
numbers<-c(4,-9,16)

for(i in numbers){
  print(sqrt(i))
}
# Warning message:
# In sqrt(i) : NaNs produced

# but what happens if we put a string?
numbers<-c(4,"a",16)

for(i in numbers){
  print(sqrt(i))
}
# Error in sqrt(x) : non-numeric argument to mathematical function

# Sometimes we need to keep the loop running even if an error happens
# For this, use TryCatch

for(i in numbers){
  tryCatch(
    {print(sqrt(i))},
    warning=function(w){print("A negative number? Come on!")},
    error=function(e){print("You are stupid! You put a string!")}
  )
}

# now try
numbers<-c(-2,-1,9)

for(i in numbers){
  tryCatch(
    {print(sqrt(i))},
    warning=function(w){print("A negative number? Come on!")},
    error=function(e){print("You are stupid! You put a string!")}
  )
}

# don't stop the loop

for(i in numbers){
  tryCatch(
    {print(sqrt(i))},
    warning=function(w){print("There was a warning")},
    error=function(e){print("An error found")}
  )
}
